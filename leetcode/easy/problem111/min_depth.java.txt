/*
Algorithm:
if anywhere you find leave return the depth else call recursively to left or right....
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        if(root==null)
            return 0;
        if(root.left==null && root.right==null)
            return 1;
        if(root.left==null)
            return 1 + minDepth(root.right);
        if(root.right==null)
            return 1 + minDepth(root.left);
        int l = minDepth(root.left);
        int r = minDepth(root.right);
        return Math.min(l, r)+1;
    }
}