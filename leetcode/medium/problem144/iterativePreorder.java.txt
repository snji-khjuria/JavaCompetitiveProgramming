/*
Algorithm:
Create a stack and push the right child first and then the left child
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        ArrayList<Integer> al = new ArrayList<Integer>();
        if(root==null)
            return al;
        Stack<TreeNode> stk = new Stack<TreeNode>();
        stk.push(root);
        while(!stk.isEmpty()) {
            root = stk.pop();
            if(root.right!=null)stk.push(root.right);
            if(root.left!=null)stk.push(root.left);
            al.add(root.val);
        }
        return al;
    }
}